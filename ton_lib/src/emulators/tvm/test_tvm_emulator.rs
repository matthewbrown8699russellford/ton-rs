use crate::cell::ton_cell::TonCellRef;
use crate::emulators::tvm::c7_register::TVMEmulatorC7;
use crate::emulators::tvm::tvm_emulator::TVMEmulator;
use crate::errors::TonlibError;
use crate::sys_utils::sys_tonlib_set_verbosity_level;
use crate::types::tlb::block_tlb::tvm::VMStack;
use crate::types::tlb::primitives::LibsDict;
use crate::types::tlb::tep_0074::jetton_transfer_msg::JettonTransferMsg;
use crate::types::tlb::tlb_type::TLBType;
use crate::types::ton_address::TonAddress;
use std::ops::Deref;
use std::str::FromStr;
use tokio_test::{assert_err, assert_ok};

const BC_CONFIG_HEX: &str = include_str!("../../../../resources/tests/bc_config_key_block_42123611.hex");

#[test]
fn test_tvm_emulator_get_wallet_address() -> anyhow::Result<()> {
    sys_tonlib_set_verbosity_level(0);
    let owner_address = TonAddress::from_str("EQB2BtXDXaQuIcMYW7JEWhHmwHfPPwa-eoCdefiAxOhU3pQg")?;

    // Monsoon
    let master_address = TonAddress::from_str("EQDk2VTvn04SUKJrW7rXahzdF8_Qi6utb0wj43InCu9vdjrR")?;
    let master_code = hex::decode("b5ee9c7201020b010001ed000114ff00f4a413f4bcf2c80b0102016202030202cc040502037a60090a03efd9910e38048adf068698180b8d848adf07d201800e98fe99ff6a2687d007d206a6a18400aa9385d47181a9aa8aae382f9702480fd207d006a18106840306b90fd001812881a28217804502a906428027d012c678b666664f6aa7041083deecbef29385d71811a92e001f1811802600271812f82c207f97840607080093dfc142201b82a1009aa0a01e428027d012c678b00e78b666491646580897a007a00658064907c80383a6465816503e5ffe4e83bc00c646582ac678b28027d0109e5b589666664b8fd80400fe3603fa00fa40f82854120870542013541403c85004fa0258cf1601cf16ccc922c8cb0112f400f400cb00c9f9007074c8cb02ca07cbffc9d05008c705f2e04a12a1035024c85004fa0258cf16ccccc9ed5401fa403020d70b01c3008e1f8210d53276db708010c8cb055003cf1622fa0212cb6acb1fcb3fc98042fb00915be200303515c705f2e049fa403059c85004fa0258cf16ccccc9ed54002e5143c705f2e049d43001c85004fa0258cf16ccccc9ed54007dadbcf6a2687d007d206a6a183618fc1400b82a1009aa0a01e428027d012c678b00e78b666491646580897a007a00658064fc80383a6465816503e5ffe4e840001faf16f6a2687d007d206a6a183faa9040")?;
    let master_data = hex::decode("b5ee9c720102140100037c0002517038f504e10a000801bf6feee5bff07f3238df435d6c58addbe0b3a94bb05cec14a6241566cb3e61750102004a0168747470733a2f2f746172616e74696e692e6465762f73746f6e2f6d6f6f6e2e6a736f6e0114ff00f4a413f4bcf2c80b0302016204050202cc0607001ba0f605da89a1f401f481f481a8610201d408090201480a0b00bb0831c02497c138007434c0c05c6c2544d7c0fc02f83e903e900c7e800c5c75c87e800c7e800c00b4c7e08403e29fa954882ea54c4d167c0238208405e3514654882ea58c511100fc02780d60841657c1ef2ea4d67c02b817c12103fcbc2000113e910c1c2ebcb853600201200c0d020120121301f500f4cffe803e90087c007b51343e803e903e90350c144da8548ab1c17cb8b04a30bffcb8b0950d109c150804d50500f214013e809633c58073c5b33248b232c044bd003d0032c032483e401c1d3232c0b281f2fff274013e903d010c7e801de0063232c1540233c59c3e8085f2dac4f3208405e351467232c7c6600e03f73b51343e803e903e90350c0234cffe80145468017e903e9014d6f1c1551cdb5c150804d50500f214013e809633c58073c5b33248b232c044bd003d0032c0327e401c1d3232c0b281f2fff274140371c1472c7cb8b0c2be80146a2860822625a020822625a004ad822860822625a028062849f8c3c975c2c070c008e00f1011009acb3f5007fa0222cf165006cf1625fa025003cf16c95005cc2391729171e25008a813a08208989680aa008208989680a0a014bcf2e2c504c98040fb001023c85004fa0258cf1601cf16ccc9ed5400705279a018a182107362d09cc8cb1f5230cb3f58fa025007cf165007cf16c9718018c8cb0524cf165006fa0215cb6a14ccc971fb0010241023000e10491038375f040076c200b08e218210d53276db708010c8cb055008cf165004fa0216cb6a12cb1f12cb3fc972fb0093356c21e203c85004fa0258cf1601cf16ccc9ed5400db3b51343e803e903e90350c01f4cffe803e900c145468549271c17cb8b049f0bffcb8b0a0822625a02a8005a805af3cb8b0e0841ef765f7b232c7c572cfd400fe8088b3c58073c5b25c60063232c14933c59c3e80b2dab33260103ec01004f214013e809633c58073c5b3327b55200083200835c87b51343e803e903e90350c0134c7e08405e3514654882ea0841ef765f784ee84ac7cb8b174cfcc7e800c04e81408f214013e809633c58073c5b3327b5520")?;

    let c7 = TVMEmulatorC7::new(master_address, hex::decode(BC_CONFIG_HEX)?)?;
    let mut emulator = TVMEmulator::new_with_c7(&master_code, &master_data, &c7)?;

    let mut stack = VMStack::default();
    stack.push_cell_slice(owner_address.to_cell_ref()?);

    let mut emulated = emulator.run_method("get_wallet_address", &stack.to_boc(false)?)?;

    let emulated_addr = TonAddress::from_cell(emulated.stack.pop_cell_slice()?.deref())?;
    assert_eq!(emulated_addr, TonAddress::from_str("EQCGY3OVLtD9KRcOsP2ldQDtuY0FMzV7wPoxjrFbayBXc23c")?);

    // USDT
    let master_address = TonAddress::from_str("EQCxE6mUtQJKFnGfaROTKOt1lZbDiiX1kCixRv7Nw2Id_sDs")?;
    let master_code = hex::decode("b5ee9c72010218010005bb000114ff00f4a413f4bcf2c80b0102016202030202cb0405020120141502f3d0cb434c0c05c6c238ecc200835c874c7c0608405e351466ea44c38601035c87e800c3b51343e803e903e90353534541168504d3214017e809400f3c58073c5b333327b55383e903e900c7e800c7d007e800c7e80004c5c3e0e80b4c7c04074cfc044bb51343e803e903e9035353449a084190adf41eeb8c089a0607001da23864658380e78b64814183fa0bc0019635355161c705f2e04904fa4021fa4430c000f2e14dfa00d4d120d0d31f018210178d4519baf2e0488040d721fa00fa4031fa4031fa0020d70b009ad74bc00101c001b0f2b19130e254431b0803fa82107bdd97deba8ee7363805fa00fa40f82854120a70546004131503c8cb0358fa0201cf1601cf16c921c8cb0113f40012f400cb00c9f9007074c8cb02ca07cbffc9d05008c705f2e04a12a14414506603c85005fa025003cf1601cf16ccccc9ed54fa40d120d70b01c000b3915be30de02682102c76b973bae30235250a0b0c018e2191729171e2f839206e938124279120e2216e94318128739101e25023a813a0738103a370f83ca00270f83612a00170f836a07381040982100966018070f837a0bcf2b025597f0900ec82103b9aca0070fb02f828450470546004131503c8cb0358fa0201cf1601cf16c921c8cb0113f40012f400cb00c920f9007074c8cb02ca07cbffc9d0c8801801cb0501cf1658fa02029858775003cb6bcccc9730017158cb6acce2c98011fb005005a04314c85005fa025003cf1601cf16ccccc9ed540044c8801001cb0501cf1670fa027001cb6a8210d53276db01cb1f0101cb3fc98042fb0001fc145f04323401fa40d2000101d195c821cf16c9916de2c8801001cb055004cf1670fa027001cb6a8210d173540001cb1f500401cb3f23fa4430c0008e35f828440470546004131503c8cb0358fa0201cf1601cf16c921c8cb0113f40012f400cb00c9f9007074c8cb02ca07cbffc9d012cf1697316c127001cb01e2f400c90d04f882106501f354ba8e223134365145c705f2e04902fa40d1103402c85005fa025003cf1601cf16ccccc9ed54e0258210fb88e119ba8e2132343603d15131c705f2e0498b025512c85005fa025003cf1601cf16ccccc9ed54e034248210235caf52bae30237238210cb862902bae302365b2082102508d66abae3026c310e0f101100088050fb0002ec3031325033c705f2e049fa40fa00d4d120d0d31f01018040d7212182100f8a7ea5ba8e4d36208210595f07bcba8e2c3004fa0031fa4031f401d120f839206e943081169fde718102f270f8380170f836a0811a7770f836a0bcf2b08e138210eed236d3ba9504d30331d19434f2c048e2e2e30d50037012130044335142c705f2e049c85003cf16c9134440c85005fa025003cf1601cf16ccccc9ed54001e3002c705f2e049d4d4d101ed54fb0400188210d372158cbadc840ff2f000ce31fa0031fa4031fa4031f401fa0020d70b009ad74bc00101c001b0f2b19130e25442162191729171e2f839206e938124279120e2216e94318128739101e25023a813a0738103a370f83ca00270f83612a00170f836a07381040982100966018070f837a0bcf2b000c082103b9aca0070fb02f828450470546004131503c8cb0358fa0201cf1601cf16c921c8cb0113f40012f400cb00c920f9007074c8cb02ca07cbffc9d0c8801801cb0501cf1658fa02029858775003cb6bcccc9730017158cb6acce2c98011fb000025bd9adf6a2687d007d207d206a6a6888122f82402027116170085adbcf6a2687d007d207d206a6a688a2f827c1400b82a3002098a81e46581ac7d0100e78b00e78b6490e4658089fa00097a00658064fc80383a6465816503e5ffe4e84000cfaf16f6a2687d007d207d206a6a68bf99e836c1783872ebdb514d9c97c283b7f0ae5179029e2b6119c39462719e4f46ed8f7413e62c780a417877407e978f01a40711411b1acb773a96bdd93fa83bb5ca8435013c8c4b3ac91f4589b4780a38646583fa0064a18040")?;
    let master_data = hex::decode("b5ee9c72010104010075000253705148e3baabcb0800c881fc78d28207072c728a2e7896228f37e17369ae121cb0eef7b4b0385f33304001020842028f452d7a4dfd74066b682365177259ed05734435be76b5fd4bd5d8af2b7c3d68010003003e68747470733a2f2f7465746865722e746f2f757364742d746f6e2e6a736f6e")?;

    let c7 = TVMEmulatorC7::new(master_address, hex::decode(BC_CONFIG_HEX)?)?;
    let mut emulator = TVMEmulator::new_with_c7(&master_code, &master_data, &c7)?;

    let mut stack = VMStack::default();
    stack.push_cell_slice(owner_address.to_cell_ref()?);

    let mut emulated = emulator.run_method("get_wallet_address", &stack.to_boc(false)?)?;

    let emulated_addr = TonAddress::from_cell(emulated.stack.pop_cell_slice()?.deref())?;
    assert_eq!(
        emulated_addr,
        TonAddress::from_str("0:89c154a4225ebfa810891236ba01975f1f8860d2b090be3036fa05c36b53c77c")?
    );
    Ok(())
}

#[test]
fn test_tvm_emulator_with_libs() -> anyhow::Result<()> {
    sys_tonlib_set_verbosity_level(0);
    // stonfi pton https://tonviewer.com/EQCxE6mUtQJKFnGfaROTKOt1lZbDiiX1kCixRv7Nw2Id_sDs
    let owner_address = TonAddress::from_str("EQCxE6mUtQJKFnGfaROTKOt1lZbDiiX1kCixRv7Nw2Id_sDs")?;
    let expected_address = TonAddress::from_str("0:2671da62fc5e6e970e198e05bbf3304136df8203cc3f0b7172827a3b0c4a24e3")?;

    // stonfi pton https://tonviewer.com/EQBnGWMCf3-FZZq1W4IWcWiGAc3PHuZ0_H-7sad2oY00o83S
    let master_address = TonAddress::from_str("EQBnGWMCf3-FZZq1W4IWcWiGAc3PHuZ0_H-7sad2oY00o83S")?;
    let code_boc =
        hex::decode("b5ee9c7201010101002300084202d29017573b8132be742e9c02dabe2311fb3df9f077e661d3ee24d431058b8830")?;
    let data_boc = hex::decode("b5ee9c7201010301005d000208000000000102084202cd88e6f3c2a9cf01bb003a2837ec0d92c19685ed1dbfffd94a545dcfdf0a14d900600168747470733a2f2f7374617469632e73746f6e2e66692f6a6574746f6e2f746f6e2d70726f78792d76322e6a736f6e")?;

    let c7 = TVMEmulatorC7::new(master_address, hex::decode(BC_CONFIG_HEX)?)?;
    let mut emulator = TVMEmulator::new_with_c7(&code_boc, &data_boc, &c7)?;

    let mut stack = VMStack::default();
    stack.push_cell_slice(owner_address.to_cell_ref()?);

    // no libs - should fail
    let emulator_error = assert_err!(emulator.run_method("get_wallet_address", &stack.to_boc(false)?));
    if let TonlibError::TVMRunMethodError(response) = emulator_error {
        assert!(response.error.is_none());
        assert_eq!(response.vm_exit_code, Some(9));
        assert_eq!(
            response.missing_library,
            Some("D29017573B8132BE742E9C02DABE2311FB3DF9F077E661D3EE24D431058B8830".to_string())
        );
    } else {
        panic!("Expected TVMRunMethodError, got: {:?}", emulator_error);
    }

    // add required lib
    let lib_cell = TonCellRef::from_boc_hex("b5ee9c7201022501000a0e000114ff00f4a413f4bcf2c80b0102016202030202c90405020120060701cbd8831c02497c138087434c0dc009c6c260c5fc0a00835c85677be903e900c7e800c5c75c87e800c7e800c1cea6d0000f4c7f4cfc412040dc415914110c4dbc27e187e105bc4373e105bc45c007e910c006ebcb8157b513434c7c07e18b5007e18f5007e1934608020148090a001bbe0c83938c5bb932b632b0b9b2c40202710b0c024ef8416f17f8416f1382104f5f4313ba8e8ff8416f1382102c76b973bae3023070e30ddc840ff2f00d0e0145a610411806f05b59d3b200005cc708c11806f05b59d3b20000290154c2782651f187400f0137a410411806f05b59d3b200005d4d98411812dca375e059b0b9f187401000f5adbcf6a268698f80fc316a00fc31ea00fc3268903800fd221800dd79702afc1400e4387d0100e78b00e78b64fc2180b6b6b7823810b7921037471a2d81b79210b7470918b810646580a9207a0029187a0065806480ef2198291837820098907c803a6465810a650389e5ffe4e82009c91a1a712a8111b7820098c00037af16f6a268698f80fc316a00fc31ea00fc3268b83fc5817c227c21c001fefa40d200d195c821cf16c9916de2f82822c870fa0201cf1601cf16c9f843016d6d6f04027001fa443001ba8e480170216f24206e8e345b036f24216e8e12317020c8cb015240f4005230f400cb00c901de433052306f04013120f90074c8cb0214ca0713cbffc9d04013923434e25502236f04013193318b02e282089896801101daf8416f16f8416f12a7038208989680a08208989680a08208989680a08208989680a0bcf2e053fa40fa40d1217001fa443001ba217001fa443001bab0f2e055f82858c870fa0201cf1601cf16c9f843016d6d6f048208989680f8416f15f82ca0f8416f16a101b60970fb0270661201fe702182b05803bcc5cb9634ba4cfb2213f784019318ed4dcb6017880faa35be8e23308288195e54c5dd42177f53a27172fa9ec630262827aa23a904821b782dace9d9aa18de2182708bcc0026baae9e45e470190267a230cfaa18be8e1c0182501425982cf597cd205cef7380a90401821b782dace9d9aa17a0dea76401a7641302fc8200c354218235c702bd3a30fc0000be228238070c1cc73b00c80000bbb0f2f420c1008e1282300de0b6b3a76400005202a3f05812a984e020821b782dace9d9aa18be8e2820821b782dace9d9aa17be8e18821b782dace9d9aa17a182501425982cf597cd205cef73809171e2e30d01a7648238056bc75e2d631000002114150096f8416f15f82ca0f8416f16a101b60970fb0270f8416f1150238210d1735400f8416f1401c8cb1fcb3f58cf16f40012810090708018c8cb055004cf165004fa0212cb6a01cf17c901fb007f01fe216f24206e8e345b036f24216e8e12317020c8cb015240f4005230f400cb00c901de433052306f04013120f90074c8cb0214ca0713cbffc9d04013923434e25502236f0401016f24216e8e12317020c8cb015240f4005230f400cb00c901de433052306f0401310382106540cf85f8416f1401c8cb1fcb3f01cf16413083061601f2208261855144814a7ff805980ff0084000be8e2a8238056bc75e2d631000008261855144814a7ff805980ff0084000a98401822056bc75e2d631aa18a001de20824adf0ab5a80a22c61ab5a700be8e278238056bc75e2d63100000824adf0ab5a80a22c61ab5a700a98401822056bc75e2d631aa17a001de20170042821b782dace9d9aa18a18288195e54c5dd42177f53a27172fa9ec630262827aa2303fc822056bc75e2d631aa18be8e1c30822056bc75e2d631aa18a18261855144814a7ff805980ff0084000de21822056bc75e2d631aa17be8e2701822056bc75e2d631aa17a101824adf0ab5a80a22c61ab5a7008238056bc75e2d63100000a984de21822056bc75e2d631aa16bee30021823815af1d78b58c400000bee3002118191a0034768018c8cb055005cf165005fa0213cb6bcc01cf17c901fb007f02f882403f1fce3da636ea5cf850be8e268238056bc75e2d6310000082403f1fce3da636ea5cf850a98401822056bc75e2d631aa16a001de20823927fa27722cc06cc5e2be8e268238056bc75e2d63100000823927fa27722cc06cc5e2a98401823815af1d78b58c400000a001de208238280e60114edb805d03bee300201b1c004c01822056bc75e2d631aa16a10182403f1fce3da636ea5cf8508238056bc75e2d63100000a984004c01823815af1d78b58c400000a101823927fa27722cc06cc5e28238056bc75e2d63100000a98402f482380ad78ebc5ac6200000be8e260182380ad78ebc5ac6200000a1018238280e60114edb805d038238056bc75e2d63100000a984de218238056bc75e2d63100000be8e26018238056bc75e2d63100000a10182380ebc5fb417461211108238056bc75e2d63100000a984de218232b5e3af16b1880000bee300211d1e004c8238056bc75e2d631000008238280e60114edb805d03a9840182380ad78ebc5ac6200000a00102f482380ebc5fb41746121110be8e268238056bc75e2d6310000082380ebc5fb41746121110a984018238056bc75e2d63100000a001de20823808f00f760a4b2db55dbe8e258238056bc75e2d63100000823808f00f760a4b2db55da984018232b5e3af16b1880000a001de20823806f5f1775788937937bee300201f20004a018232b5e3af16b1880000a101823808f00f760a4b2db55d8238056bc75e2d63100000a98401ec82315af1d78b58c40000be8e250182315af1d78b58c40000a101823806f5f17757889379378238056bc75e2d63100000a984de218238056bc75e2d6310000021a0511382380ad78ebc5ac6200000a98466a0511382381043561a8829300000a98466a05113823815af1d78b58c400000a98466a0511321004a8238056bc75e2d63100000823806f5f1775788937937a9840182315af1d78b58c40000a00101ec823806248f33704b286603be8e258238056bc75e2d63100000823806248f33704b286603a984018230ad78ebc5ac620000a001de20823805c548670b9510e7acbe8e258238056bc75e2d63100000823805c548670b9510e7aca98401823056bc75e2d6310000a001de208238056bc75e2d63100000a12201ea82381b1ae4d6e2ef500000a98466a0511382382086ac351052600000a98466a05113823825f273933db5700000a98466a05113822056bc75e2d631aa16a98466a05113823830ca024f987b900000a98466a0511382383635c9adc5dea00000a98466a0511382383ba1910bf341b00000a98466a0032301fe8238056bc75e2d631000005122a012a98453008238056bc75e2d63100000a9845c8238056bc75e2d63100000a9842073a90413a051218238056bc75e2d63100000a9842075a90413a051218238056bc75e2d63100000a9842077a90413a051218238056bc75e2d63100000a9842079a90413a0598238056bc75e2d631000002400428238410d586a20a4c00000a98412a08238056bc75e2d63100000a984018064a984001ca984800ba904a0aa00a08064a904")?;
    let emulator_libs_boc = LibsDict::new([lib_cell.clone()]).to_boc(false)?;
    emulator.set_libs(&emulator_libs_boc)?;

    let mut emulated_result = emulator.run_method("get_wallet_address", &stack.to_boc(false)?)?;
    let emulated_addr = TonAddress::from_cell(emulated_result.stack.pop_cell_slice()?.deref())?;

    assert_eq!(emulated_addr, expected_address);
    Ok(())
}

#[test]
fn test_tvm_emulator_send_int_ext_msg() -> anyhow::Result<()> {
    sys_tonlib_set_verbosity_level(0);
    let code = hex::decode("b5ee9c7201021301000463000114ff00f4a413f4bcf2c80b0102016202030202cb040502037a600f1004f7d0831c02497c0f8007434c0c05c6c2497c0f83e903e900c7e800c5c75c87e800c7e800c00b4c7f4cffb51343500743e903e903e900c00fe8034c034e7f5350c0411cab00578c08aa0841657c1ef2ea3854d57c0cd4d56cd04b1c17cb812407e90350c04bc04780aa0841ef765f7aeb8c08aa0840b1dae5ceeb8c08e6060708090201ce0d0e008a39393a5181c705f2e04904fa40d43020d08060d721fa00304bb0527cf0105028a00744655023c85007cf165005cf165003cf16c9c85006fa02cb00cb9f13cc12ccccc9ed5401fe3a3b3b05fa00fa40f82854120a70542013541403c85004fa0258cf1601cf16ccc922c8cb0112f400f400cb00c9f9007074c8cb02ca07cbffc9d0500ac705f2e04a14a145465412034a99c85007cf165005cf165003cf16c9c85006fa02cb00cb9f13cc12ccccc9ed54f40482103afd461c708018c8cb055005cf1624fa02140a01fe3a5f07048208989680a015bcf2e04b02fa40d3003095c821cf16c9916de28210d1735400708018c8cb055005cf1624fa0214cb6a13cb1f14cb3f23fa443070ba8e33f828440370542013541403c85004fa0258cf1601cf16ccc922c8cb0112f400f400cb00c9f9007074c8cb02ca07cbffc9d0cf16966c227001cb01e2f4000b01fe3b3b27821062dd86f1ba8e3032365161c705f2e04902fa403046755023c85007cf165005cf165003cf16c9c85006fa02cb00cb9f13cc12ccccc9ed54e027821066447dadba8e363334355154c705f2e04970c8cb01c9d017104644155023c85007cf165005cf165003cf16c9c85006fa02cb00cb9f13cc12ccccc9ed54e0270c007acb6a13cb1f5230cb3ff400c98040fb00fa403020d70b01c3008e1f8210d53276db708010c8cb055003cf1622fa0212cb6acb1fcb3fc98042fb00915be2000ac98040fb0000fc821011db408aba8e3031365161c705f2e04902fa403046745023c85007cf165005cf165003cf16c9c85006fa02cb00cb9f13cc12ccccc9ed54e039068210743f8e58ba8e325161c70507c00017b1f2e0497102d430470703c85007cf165005cf165003cf16c9c85006fa02cb00cb9f13cc12ccccc9ed54e05f09840ff2f000950cfe0a005c150804d50500f214013e809633c58073c5b33248b232c044bd003d0032c032483e401c1d3232c0b281f2fff2741de0063232c15633c5a082bebc203e80b2daf333325c7ec020008b0cfe0a005c150804d50500f214013e809633c58073c5b33248b232c044bd003d0032c0327e401c1d3232c0b281f2fff2741c60063232c15633c59c3e80b2dab33260103ec020009badbcf6a2686a00e87d207d207d201801fd00698069cfea6a180823b638fc1400b82a1009aa0a01e428027d012c678b00e78b666491646580897a007a00658064fc80383a6465816503e5ffe4e8400201201112003cab46ed44d0d401d0fa40fa40fa403003fa00d300d39fd4d43010475b6c240040aa2ded44d0d401d0fa40fa40fa403003fa00d300d39fd4d43010476c427f5520")?;
    let data = hex::decode("b5ee9c720102230100050b00033b90684aff1b327c3906d800000000000000000000000000000000000000040102030086801bc72bea2cb2070ee096fea5a30b20dcd60823f1e2427d8ba030e52ac9d45fb184009570aa1bb7d78ae8a80a769915a7fc4adb7332ed4d031c952b928fd6b87e5d9b010300c0040114ff00f4a413f4bcf2c80b1202012005060143bff082eb663b57a00192f4a6ac467288df2dfeddb9da1bee28f6521c8bebd21f1ec007020120080900a40068747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6f726269742d636861696e2f6272696467652d746f6b656e2d696d6167652f6d61696e2f746f6e2f6574682e706e670201200a0b0201200e0f0141bf4546a6ffe1b79cfdd86bad3db874313dcde2fb05e6a74aa7f3552d9617c79d130c0141bf6ed4f942a7848ce2cb066b77a1128c6a1ff8c43f438a2dce24612ba9ffab8b030d0034004f726269742042726964676520546f6e20457468657265756d000a006f4554480141bf5208def46f5a1d4f9dce66ab309f4a851305f166f91ef79d923ef58e34f9a209100141bf5d01fa5e3c06901c45046c6b2ddcea5af764fea0eed72a10d404f2312ceb247d11004c004f726269742042726964676520546f6b656e206f6e20544f4e20626c6f636b636861696e21000600313802016213140202cb1516001ba0f605da89a1f401f481f481a86102012017180201621c1d020148191a01f1f81e99ffd007d2010f801f6a2687d007d207d206a18289b50a9156382f9716094617ff971612a1a21382a1009aa0a01e428027d012c678b00e78b666491646580897a007a00658064907c80383a6465816503e5ffe4e8027d207a0218fd00106ba4e1007971623bc00c646582a804678b387d010be5b589e641b00b7420c700925f04e001d0d3030171b095135f03f012e0fa40fa4031fa003171d721fa0031fa003002d31f2182100f8a7ea5ba95313459f00fe0218210178d4519ba9631444403f010e0358210595f07bcba9359f011e05f04840ff2f0800115fa443070baf2e14d800ae8210178d4519c8cb1f19cb3f5007fa0222cf165006cf1625fa025003cf16c95005cc2391729171e25008a813a08208989680aa008208989680a0a014bcf2e2c504c98040fb001023c85004fa0258cf1601cf16ccc9ed540201201e1f008148020d721ed44d0fa00fa40fa40d43004d31f218210178d4519ba0282107bdd97deba12b1f2e2c5d33f31fa003013a05023c85004fa0258cf1601cf16ccc9ed54803f73b51343e803e903e90350c0234cffe80145468017e903e9014d6f1c1551cdb5c150804d50500f214013e809633c58073c5b33248b232c044bd003d0032c0327e401c1d3232c0b281f2fff274140371c1472c7cb8b0c2be80146a2860822625a020822625a004ad822860822625a028062849f8c3c975c2c070c008e020212200e33b51343e803e903e90350c01f4cffe803e903d010c1458a85492b1c17cb8b04a30bffcb8b0a0822625a02a8005e805ef3cb8b0e0841ef765f7b232c7f2cfd4017e808873c59400f3c5bd00325c60063232c14933c59c3e80b2dab33260103ec01004f214013e809633c58073c5b3327b552000705279a018a182107362d09cc8cb1f5230cb3f58fa025007cf165007cf16c9718010c8cb0524cf165006fa0215cb6a14ccc971fb0010241023000e10491038375f040076c200b08e218210d53276db708010c8cb055008cf165004fa0216cb6a12cb1f12cb3fc972fb0093356c21e203c85004fa0258cf1601cf16ccc9ed54")?;

    let dst_address = TonAddress::from_str("Ef8CmPZLxWB-9ypeGdGhEqA6ZNLBFUwnqXPH2eUQd_MzbGh_")?;
    let msg = JettonTransferMsg::new(dst_address.to_msg_address_int(), 1u32);

    // send_int_msg
    let mut emulator = TVMEmulator::new(&code, &data)?;
    let tvm_response = emulator.send_int_msg(&msg.to_boc(false)?, 300)?;
    let tvm_result = assert_ok!(tvm_response.into_result());
    assert_eq!(tvm_result.gas_used, 2779);
    assert_eq!(tvm_result.vm_exit_code, 65535);

    // send_ext_msg
    let tvm_response = emulator.send_ext_msg(&msg.to_boc(false)?)?;
    let tvm_result = assert_ok!(tvm_response.into_result());
    assert_eq!(tvm_result.gas_used, 270);
    assert_eq!(tvm_result.vm_exit_code, 11);
    Ok(())
}
